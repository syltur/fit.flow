//button
/* 16 */
.header-wrapper {

  a {
    text-transform: uppercase;
    font-size: 12px;
    display: block;
    width: 200px;
    height: 60px;
    padding: 5px;
    line-height: 25px;
    font-size: 18px;
    font-family: 'Oswald';
    text-decoration: none;
    color: $third-color;
    border: 2px solid $third-color;
    letter-spacing: 2px;
    align-content: center;
    text-align: center;
    position: relative;
    transition: all .35s;
  }
  a span{
    position: relative;
    z-index: 2;
  }
  a:after{
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background: $second-color;
    transition: all .35s;
  }
  a:hover{
    color: #fff;
  }
  a:hover:after{
    width: 100%;
  }
}
//btn cta 
$hueStep: 90;
$delayStep: .115s;
.btn-wrapper {
	display: grid;
	place-content: center;
  float: left;
}
.btn {
  clear: both;
  width: 70vh;
  border: 2px solid $first-color !important;
	background: hsl(var(--hue), 98%, 80%);
	border-radius: 7px;
	cursor: pointer;
	letter-spacing: .05em;
	overflow: hidden;
	min-height: 3.3em;
	position: relative;
	&--yellow {
		--hue: 46;
	}
	&--green {
		--hue: 163;
	}
	&--purple {
		--hue: 244;
	}
	&--red {
		--hue: 0;
	}
	&--blue {
		--hue: 210;
	}
	&:active,
	&:focus {
		outline: 3px solid hsl(calc(var(--hue) + #{$hueStep}), 98%, 80%);
	}
	& + & {
		margin-top: 2.5em;
	}
	&__txt {
		position: relative;
		z-index: 2;
	}
	&__bg {
		background: hsl(var(--hueBg), 98%, 80%);
		border-radius: 50%;
		display: block;
		height: 0;
		left: 50%;
		margin: -50% 0 0 -50%;
		padding-top: 100%;
		position: absolute;
		top: 50%;
		width: 100%;
		transform: scale(0);
		transform-origin: 50% 50%;
		transition: transform 0.175s cubic-bezier(0.5, 1, 0.89, 1);
		z-index: 1;

		@for $i from 1 through 4 { 

			&:nth-of-type(#{$i}) {
				--hueBg: calc(var(--hue) - #{$i * $hueStep});
				transition-delay: $delayStep / 2 * (4 - $i);
			}
		}
		.btn:hover &,
		.btn:focus &,
		.btn:active & {
			transform: scale(1.5);
			transition: transform 0.35s cubic-bezier(0.11, 0, 0.5, 0);

			@for $i from 1 through 4 {
        
				&:nth-of-type(#{$i}) {
					transition-delay: $delayStep * $i;
				}
			}
		}
	}
}